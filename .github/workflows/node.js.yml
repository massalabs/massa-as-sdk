# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
  workflow_call:

jobs:
  
  build:
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}
      color: ${{ steps.coverage.outputs.color }}
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Checkout code
      uses: actions/checkout@v2
    - run: npm ci
    - run: npm run fmt:check
    - id: coverage
      run: |
        value=$(npm run test:ci | grep -oE '^│\s*total\s+\│\s*([0-9.]+)%' | grep -oE '[0-9]+(\.[0-9]+)?%' | cut -d'.' -f1)
        echo "coverage=$value" >> $GITHUB_OUTPUT

    - name: Update README
      if: matrix.node-version == '18.x'
      uses: actions/github-script@v3
      with:
        script: |
          let color = "red";

          const coverage = parseInt(process.env.COVERAGE);

          if (coverage >= 80) {
              color = "green";
          } else if (coverage >= 70) {
              color = "orange";
          }

          const fs = require('fs');
          
          const content = fs.readFileSync('README.md', 'utf8');
          const lines = content.split('\n');

          const match = lines[1].match(/coverage-(\d{1,3})%/);
          const oldCoverage = match ? parseInt(match[1]) : null;

          if (oldCoverage != coverage || !oldCoverage) {
            console.log('updating badge');

            const response = await github.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'README.md',
              ref: context.ref
            });

            lines[1] = `![check-code-coverage](https://img.shields.io/badge/coverage-${coverage}%25-${color})\n`;;
            await github.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'README.md',
              message: 'Update README',
              content: Buffer.from(lines.join('\n')).toString('base64'),
              sha: response.data.sha,
              branch: context.ref
            });
          }

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERAGE: ${{ steps.coverage.outputs.coverage }}
        COLOR: ${{ steps.coverage.outputs.color }}